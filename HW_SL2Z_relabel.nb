(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    135370,       3055]
NotebookOptionsPosition[     89035,       2190]
NotebookOutlinePosition[    133639,       3035]
CellTagsIndexPosition[    133596,       3032]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Define the anticlockwise monodromy matrix function", "Text",
 CellChangeTimes->{{3.8425955776426616`*^9, 3.842595582604512*^9}, {
  3.842789247996786*^9, 3.842789477072506*^9}, {3.8427895590683613`*^9, 
  3.8427895603420887`*^9}, {3.8427906013318653`*^9, 3.842790602111624*^9}, {
  3.850026699354624*^9, 3.850026702547353*^9}, {3.852126776693252*^9, 
  3.8521267780515957`*^9}},ExpressionUUID->"c176b238-4782-4b8a-9d68-\
ae8f978a59a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"M", "[", 
    RowBox[{"p_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"1", "+", 
        RowBox[{"p", "*", "q"}]}], 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"p", "^", "2"}], ")"}]}]},
      {
       RowBox[{"q", "^", "2"}], 
       RowBox[{"1", "-", 
        RowBox[{"p", "*", "q"}]}]}
     }], "\[NoBreak]", ")"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8425919488403935`*^9, 3.8425919983956375`*^9}, {
   3.842789525544402*^9, 3.842789526551198*^9}, 3.8432144150813723`*^9, 
   3.8432853598926907`*^9, 3.845448437947281*^9, {3.8499542022382812`*^9, 
   3.8499542247702417`*^9}, 3.852126753759399*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"04575c71-10d4-4799-bd36-0554d99955a1"],

Cell["Import initial webs ", "Text",
 CellChangeTimes->{{3.842973424493891*^9, 3.842973435089554*^9}, {
  3.843648448911954*^9, 3.84364847936194*^9}, {3.845112820842988*^9, 
  3.845112835466734*^9}, {3.845449270525515*^9, 3.8454492717832813`*^9}, {
  3.851764316352635*^9, 
  3.851764317815117*^9}},ExpressionUUID->"9f731d3c-5b2b-4543-9947-\
b20d11442dde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"initialwebs", "=", 
   RowBox[{"Import", "[", "\"\<path to dataset\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.843648483167416*^9, 3.8436487038420467`*^9}, 
   3.843648762277294*^9, {3.843648794342266*^9, 3.843649174271085*^9}, {
   3.843649208606262*^9, 3.843649375841484*^9}, {3.843649408709415*^9, 
   3.843649435356655*^9}, {3.8436496397065363`*^9, 3.843649646705696*^9}, {
   3.8438151406079893`*^9, 3.843815151581362*^9}, {3.8438171443880568`*^9, 
   3.8438171804087973`*^9}, {3.843881798535408*^9, 3.8438818054756737`*^9}, {
   3.8441579935694304`*^9, 3.844158031300641*^9}, {3.8441595561291037`*^9, 
   3.844159587760816*^9}, {3.844188317508485*^9, 3.8441883257386913`*^9}, {
   3.844188703178063*^9, 3.844188710614524*^9}, 3.844249138314348*^9, {
   3.844249260662793*^9, 3.844249268372733*^9}, {3.844249789436988*^9, 
   3.8442500767209167`*^9}, {3.844250118307433*^9, 3.8442501784269533`*^9}, 
   3.844502424808444*^9, {3.845113120550249*^9, 3.845113161190138*^9}, {
   3.845113312526531*^9, 3.84511336372115*^9}, 3.845114881666127*^9, 
   3.845114939595625*^9, {3.8453575737458487`*^9, 3.845357592020006*^9}, 
   3.8453588658761663`*^9, {3.845359373720798*^9, 3.845359381288291*^9}, {
   3.845376427962151*^9, 3.845376429262774*^9}, 3.8454484332402782`*^9, 
   3.845449257625881*^9, {3.8455369169218807`*^9, 3.845536918808195*^9}, 
   3.845548000296595*^9, {3.845549856767095*^9, 3.84554987218959*^9}, {
   3.8456411933309717`*^9, 3.845641193704892*^9}, {3.846183234433031*^9, 
   3.84618329566232*^9}, {3.846183366010215*^9, 3.8461833954516153`*^9}, {
   3.846183433392127*^9, 3.846183494106901*^9}, {3.846501134921625*^9, 
   3.846501142636648*^9}, 3.846521357766974*^9, {3.846523261288076*^9, 
   3.8465232663234987`*^9}, {3.846586209612447*^9, 3.846586210400095*^9}, {
   3.8467451581878967`*^9, 3.846745160276887*^9}, {3.846754065814269*^9, 
   3.84675406645024*^9}, 3.846756188424494*^9, {3.8469211757553167`*^9, 
   3.846921176688056*^9}, {3.847168689484704*^9, 3.847168698087203*^9}, {
   3.847172125313301*^9, 3.847172160664571*^9}, {3.847172257914249*^9, 
   3.8471723039392223`*^9}, {3.8471723390604267`*^9, 3.847172348427114*^9}, {
   3.847172383809939*^9, 3.847172387257113*^9}, {3.847173576999626*^9, 
   3.84717358576873*^9}, 3.8471798014311657`*^9, {3.84720194625275*^9, 
   3.847201947121394*^9}, {3.847249446716158*^9, 3.8472494564285994`*^9}, {
   3.847249509825328*^9, 3.847249535339122*^9}, {3.847249803098361*^9, 
   3.8472498047396793`*^9}, {3.847250668539503*^9, 3.8472506701263123`*^9}, {
   3.847250817269071*^9, 3.8472508178906803`*^9}, {3.847724744602767*^9, 
   3.847724749338081*^9}, {3.847727628224667*^9, 3.847727665297596*^9}, {
   3.847727857948367*^9, 3.8477278737825937`*^9}, {3.847796349784165*^9, 
   3.847796357710202*^9}, {3.848319143808362*^9, 3.848319155602025*^9}, {
   3.8483191877929087`*^9, 3.8483192016015463`*^9}, {3.8483855261043158`*^9, 
   3.8483855263703136`*^9}, {3.850033295101741*^9, 3.8500332952440147`*^9}, {
   3.850753108370427*^9, 3.850753143771514*^9}, {3.851628187797525*^9, 
   3.8516281887220078`*^9}, {3.852187664449194*^9, 3.852187664819319*^9}, {
   3.852188170412238*^9, 3.852188170707713*^9}, {3.852220555247138*^9, 
   3.8522205557710457`*^9}, {3.852223030009115*^9, 3.8522230314648523`*^9}, {
   3.852226975938974*^9, 3.852226976222604*^9}, {3.852227034248328*^9, 
   3.8522270343968887`*^9}, {3.8522640030154943`*^9, 3.852264005114564*^9}, {
   3.852264041634596*^9, 3.852264042232751*^9}, {3.852747563177681*^9, 
   3.852747567716098*^9}, {3.852747996812139*^9, 3.852747997680459*^9}, {
   3.852780058270852*^9, 3.852780058393243*^9}, {3.853423455193472*^9, 
   3.853423455539962*^9}, {3.853425267414775*^9, 3.853425267583466*^9}, 
   3.861958673604669*^9, {3.89028698372311*^9, 
   3.890286987985755*^9}},ExpressionUUID->"75ea87da-a852-4857-a175-\
a081107209b5"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/elliheyes/Documents/PhD/Data/\
Brane_Webs/3leg_data_Y_I.csv\\\\\\\"\\\"}]\\) not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 2, 1, 22165145868606742011, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.855222201113317*^9, 3.855222225257943*^9}},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"9bcc242f-0870-4f34-8df7-e608a45692ac"]
}, Open  ]],

Cell["Generate SL(2,Z) matrices", "Text",
 CellChangeTimes->{{3.8451153122651453`*^9, 
  3.845115325512569*^9}},ExpressionUUID->"83947f1c-ccf1-4d9f-800e-\
ef87bcd6f0bb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coprimepairs", " ", "=", " ", 
   RowBox[{"Values", "[", 
    RowBox[{"FindInstance", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"GCD", "[", 
         RowBox[{"l", ",", "r"}], "]"}], "==", "1"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Abs", "[", "l", "]"}], "<", "3"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Abs", "[", "r", "]"}], "<", "3"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "r"}], "}"}], ",", "Integers", ",", "500"}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SL2Zmat", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "coprimepairs", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"a", "=", 
     RowBox[{
      RowBox[{"coprimepairs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"b", "=", 
     RowBox[{
      RowBox[{"coprimepairs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"cd", "=", 
     RowBox[{"Values", "[", 
      RowBox[{"FindInstance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"a", " ", "d"}], "-", 
           RowBox[{"b", " ", "c"}]}], "==", "1"}], "  ", "&&", " ", 
         RowBox[{
          RowBox[{"Abs", "[", "c", "]"}], "<", "3"}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"Abs", "[", "d", "]"}], "<", "3"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "d"}], "}"}], ",", "Integers"}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"c", " ", "=", " ", 
     RowBox[{
      RowBox[{"cd", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"d", "=", 
     RowBox[{
      RowBox[{"cd", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"SL2Zmat", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", "SL2Zmat"}], "Input",
 CellChangeTimes->{{3.8451134415351458`*^9, 3.845113460398272*^9}, {
   3.845113523735162*^9, 3.845113532862557*^9}, 3.845114878373849*^9, {
   3.845376446673835*^9, 3.845376457574877*^9}, {3.845376584159127*^9, 
   3.845376585370566*^9}, {3.8455369299484987`*^9, 3.8455369339645863`*^9}, {
   3.84570907126919*^9, 3.84570907206172*^9}, {3.847190150541398*^9, 
   3.847190151205471*^9}, {3.847724944400675*^9, 3.847724944672839*^9}, {
   3.851626309586155*^9, 3.851626310291703*^9}, {3.852021626747608*^9, 
   3.8520216456102552`*^9}, 3.852022969724415*^9, {3.852033140764283*^9, 
   3.85203314154851*^9}, {3.852033232184874*^9, 3.852033234558066*^9}, {
   3.852034921909747*^9, 3.8520349237291393`*^9}, {3.852044253731372*^9, 
   3.852044254902452*^9}, {3.852044924730983*^9, 3.852044935834998*^9}, {
   3.853225630397018*^9, 3.8532256309963493`*^9}, {3.8534234837722807`*^9, 
   3.853423484102495*^9}, {3.853478773868702*^9, 3.8534787742086*^9}, {
   3.8535275927271147`*^9, 3.853527592995598*^9}, {3.8552223995413303`*^9, 
   3.855222400131673*^9}, {3.855222554607848*^9, 3.855222555566057*^9}, {
   3.861956292074498*^9, 3.861956327199255*^9}, {3.8619569324811687`*^9, 
   3.8619569344505568`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d8895932-1a48-4590-9cf6-94e38741ea53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.861956321883931*^9, 3.861956328152178*^9}, 
   3.861956935089197*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"37a75a46-829a-48c2-9e0a-44bbe153224f"]
}, Open  ]],

Cell["Define a function that relabels a web matrix", "Text",
 CellChangeTimes->{{3.8454484495031157`*^9, 3.845448457801819*^9}, {
  3.8520217416595297`*^9, 3.852021758801298*^9}, {3.852043667671479*^9, 
  3.852043707563066*^9}, {3.852220726539178*^9, 
  3.8522207279311132`*^9}},ExpressionUUID->"eb735d04-b821-4638-af71-\
6a1013099bb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Labeling", "[", 
    RowBox[{"W_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "==", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "==", "2"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"W", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"W", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"W", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"W", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"W", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"W", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "==", "3"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "==", "4"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"W", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "}"}]}], "]"}]}], 
        "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.852021736433737*^9, 3.852021938277658*^9}, {
   3.852024961897387*^9, 3.852025042032969*^9}, {3.852063345017111*^9, 
   3.852063383264332*^9}, {3.8520634813161173`*^9, 3.8520635411599827`*^9}, {
   3.852125343579936*^9, 3.852125533899432*^9}, {3.852126665887211*^9, 
   3.852126724633226*^9}, {3.852220738132146*^9, 3.8522208928393097`*^9}, 
   3.852223772618691*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"f796ca66-33cc-43ce-aca0-3507b471ec13"],

Cell["Define a function that SL2Z transforms a web matrix", "Text",
 CellChangeTimes->{{3.8454484495031157`*^9, 3.845448457801819*^9}, {
  3.8520217416595297`*^9, 3.852021758801298*^9}, {3.852022079842965*^9, 
  3.852022112569229*^9}, {3.85202218177849*^9, 3.852022204358356*^9}, {
  3.852022628181806*^9, 3.8520226433108263`*^9}, {3.8520437163594093`*^9, 
  3.852043723834301*^9}},ExpressionUUID->"f3811d29-925b-4737-bbf2-\
db0899a44250"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SL2Z", "[", 
    RowBox[{"W_", ",", "M_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.852022063770439*^9, 3.85202206655523*^9}, {
  3.852022114756089*^9, 3.852022139628911*^9}, {3.8520222065533*^9, 
  3.852022232058638*^9}, {3.852022266533379*^9, 3.852022387939947*^9}, {
  3.852022445765273*^9, 3.8520224805458097`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"180d433e-9b04-431e-b6b3-2891f8ef2f79"],

Cell["Define a function that performs a HW move on a web matrix", "Text",
 CellChangeTimes->{{3.8454484495031157`*^9, 3.845448457801819*^9}, {
  3.8520217416595297`*^9, 3.852021758801298*^9}, {3.852022079842965*^9, 
  3.852022112569229*^9}, {3.85202218177849*^9, 3.852022204358356*^9}, {
  3.8520226553712463`*^9, 3.8520226765862427`*^9}, {3.852028160429571*^9, 
  3.852028162751691*^9}, {3.852043727145486*^9, 3.8520437353265247`*^9}, {
  3.852043849829701*^9, 3.852043868787994*^9}, {3.8520439624378233`*^9, 
  3.852043969886077*^9}},ExpressionUUID->"dfbc7ddb-6b3d-479a-a6f9-\
87349ce5bc5f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pqm", "[", "W_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"GCD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"GCD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"GCD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          RowBox[{"GCD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", 
          RowBox[{"GCD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"W", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", 
          RowBox[{"GCD", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GCD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"GCD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"GCD", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HWsweep", "[", 
    RowBox[{"pq_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"pq", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "==", "0"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"pq", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pq", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], ",", "True", ",", 
         "False"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pq", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", "True", ",", 
         "False"}], "]"}]}], "]"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"pq", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pq", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"pq", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{
              RowBox[{"pq", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{
            RowBox[{"pq", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "True", ",", "False"}], 
        "]"}], ",", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pq", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"pq", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{
              RowBox[{"pq", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{
            RowBox[{"pq", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "True", ",", "False"}], 
        "]"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HWpq", "[", 
    RowBox[{"pq_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "==", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"pq", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"HWsweep", "[", 
          RowBox[{"pq", ",", "1", ",", "2"}], "]"}], ",", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pq", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"pq", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"pq", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"pq", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"HWsweep", "[", 
          RowBox[{"pq", ",", "1", ",", "3"}], "]"}], ",", 
         RowBox[{
          RowBox[{"M", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pq", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"pq", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
          RowBox[{"pq", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"pq", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "==", "2"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"HWsweep", "[", 
            RowBox[{"pq", ",", "2", ",", "1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pq", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pq", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
            RowBox[{"pq", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"pq", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"-", 
          RowBox[{"pq", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"HWsweep", "[", 
            RowBox[{"pq", ",", "2", ",", "3"}], "]"}], ",", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pq", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pq", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
            RowBox[{"pq", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"pq", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"HWsweep", "[", 
            RowBox[{"pq", ",", "3", ",", "1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pq", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pq", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
            RowBox[{"pq", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"pq", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"HWsweep", "[", 
            RowBox[{"pq", ",", "3", ",", "2"}], "]"}], ",", 
           RowBox[{
            RowBox[{"M", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pq", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pq", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ".", 
            RowBox[{"pq", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"pq", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"-", 
          RowBox[{"pq", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HWm", "[", 
    RowBox[{"pq_", ",", "m_", ",", "i_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "==", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Clear", "[", "a", "]"}], ";", 
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"Values", "[", 
           RowBox[{"Solve", "[", 
            RowBox[{
             RowBox[{"0", "==", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ".", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{"m", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"m", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}]}], ",", "a"}], 
            "]"}], "]"}], ",", "1", ",", "1"}], "]"}]}], ",", 
       RowBox[{"m", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"m", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", "==", "2"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Clear", "[", "a", "]"}], ";", 
          RowBox[{"Part", "[", 
           RowBox[{
            RowBox[{"Values", "[", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"0", "==", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ".", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"m", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "a", ",", 
                   RowBox[{"m", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}]}], ",", "a"}], 
              "]"}], "]"}], ",", "1", ",", "1"}], "]"}]}], ",", 
         RowBox[{"m", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"m", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"m", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"Clear", "[", "a", "]"}], ";", 
          RowBox[{"Part", "[", 
           RowBox[{
            RowBox[{"Values", "[", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{"0", "==", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"pq", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ".", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"m", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"m", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "a"}], "}"}]}]}], 
               ",", "a"}], "]"}], "]"}], ",", "1", ",", "1"}], "]"}]}]}], 
        "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HW", "[", 
   RowBox[{"W_", ",", "i_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"i", "==", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"HWpq", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pqm", "[", "W", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"HWm", "[", 
           RowBox[{
            RowBox[{"HWpq", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"pqm", "[", "W", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"HWpq", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pqm", "[", "W", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"HWm", "[", 
           RowBox[{
            RowBox[{"HWpq", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"pqm", "[", "W", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"HWpq", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pqm", "[", "W", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"HWm", "[", 
           RowBox[{
            RowBox[{"HWpq", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"pqm", "[", "W", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"HWpq", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pqm", "[", "W", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"HWm", "[", 
           RowBox[{
            RowBox[{"HWpq", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"pqm", "[", "W", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"HWpq", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pqm", "[", "W", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"HWm", "[", 
           RowBox[{
            RowBox[{"HWpq", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"pqm", "[", "W", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"HWpq", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pqm", "[", "W", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", 
         RowBox[{
          RowBox[{"HWm", "[", 
           RowBox[{
            RowBox[{"HWpq", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{"pqm", "[", "W", "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", "==", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "2"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"HWpq", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"pqm", "[", "W", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], " ", 
           RowBox[{
            RowBox[{"HWm", "[", 
             RowBox[{
              RowBox[{"HWpq", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"pqm", "[", "W", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}], ",", 
              RowBox[{
               RowBox[{"pqm", "[", "W", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "3"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.85202264946062*^9, 3.852022650709222*^9}, {
   3.8520226856327744`*^9, 3.852022702195155*^9}, {3.8520227804558067`*^9, 
   3.852022949135787*^9}, {3.852023011152544*^9, 3.8520230946201363`*^9}, {
   3.852023208333972*^9, 3.852023234133657*^9}, {3.8520232859353933`*^9, 
   3.8520234986808567`*^9}, {3.85202388864788*^9, 3.852024020080649*^9}, {
   3.852024067357884*^9, 3.8520240845827103`*^9}, {3.852024135884145*^9, 
   3.852024255458181*^9}, {3.852024349318221*^9, 3.852024491356635*^9}, {
   3.852024532968542*^9, 3.8520246660051107`*^9}, {3.852024697621949*^9, 
   3.852024867477964*^9}, {3.852025460723702*^9, 3.852025490048777*^9}, {
   3.852025549136677*^9, 3.8520255521130247`*^9}, {3.8520256185933104`*^9, 
   3.852025652745714*^9}, {3.852025696180928*^9, 3.852025835789542*^9}, {
   3.85202587025666*^9, 3.852025871928941*^9}, {3.8520259067003*^9, 
   3.852025945241242*^9}, {3.852025975915001*^9, 3.852025986159829*^9}, {
   3.852026353566979*^9, 3.852026359233046*^9}, {3.8520263942256947`*^9, 
   3.852026647569421*^9}, {3.8520268703676558`*^9, 3.852026881117875*^9}, {
   3.852026938689126*^9, 3.852027070612965*^9}, 3.852027428180457*^9, {
   3.852027664551154*^9, 3.8520277378791847`*^9}, {3.852027778664959*^9, 
   3.852027802625184*^9}, {3.852027839558567*^9, 3.852027893710616*^9}, {
   3.852027928608816*^9, 3.852027929924246*^9}, {3.8520280154667187`*^9, 
   3.852028081118001*^9}, {3.8520281650518427`*^9, 3.8520283684101973`*^9}, {
   3.852028398555223*^9, 3.8520285512208767`*^9}, {3.8520285830215273`*^9, 
   3.8520286791676817`*^9}, {3.8520287143393917`*^9, 3.852028785277771*^9}, {
   3.852028980660698*^9, 3.8520290503727007`*^9}, {3.852029083039135*^9, 
   3.852029196544471*^9}, {3.852029310781156*^9, 3.8520294355974913`*^9}, {
   3.852029476885755*^9, 3.852029605706314*^9}, {3.852029670391939*^9, 
   3.8520297551837387`*^9}, {3.8520297875343933`*^9, 
   3.8520299114452267`*^9}, {3.852029982120461*^9, 3.852029983133944*^9}, {
   3.8520300296038713`*^9, 3.852030062312336*^9}, {3.8520301016413507`*^9, 
   3.852030136911579*^9}, {3.852030183892247*^9, 3.852030589443383*^9}, {
   3.85203062590103*^9, 3.8520308077896957`*^9}, {3.852030847035452*^9, 
   3.852030995749544*^9}, {3.852031460165701*^9, 3.852031483742322*^9}, {
   3.852032032859665*^9, 3.8520320771607523`*^9}, {3.852032114586597*^9, 
   3.852032149919416*^9}, {3.852032217891079*^9, 3.8520323161736193`*^9}, {
   3.8520323535791597`*^9, 3.852032560462387*^9}, {3.8520437586010036`*^9, 
   3.852043791452277*^9}, {3.852044214904976*^9, 3.852044215904923*^9}, {
   3.852220643754545*^9, 3.852220662108803*^9}, 3.8534773698371687`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"bb8ea5e5-2ba7-4826-83df-f8a7bcb2d8f3"],

Cell["Generate sets of equivalent webs", "Text",
 CellChangeTimes->{{3.8454484495031157`*^9, 3.845448457801819*^9}, {
  3.852032679227695*^9, 3.852032679795003*^9}, {3.852043978267312*^9, 
  3.852043979783721*^9}},ExpressionUUID->"849dfba4-5b26-42f7-8e12-\
ca75a64c445d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bigWList", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "initialwebs", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"define", " ", "the", " ", "initial", " ", "web"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pqs", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"initialwebs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"initialwebs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"initialwebs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"initialwebs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"initialwebs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"initialwebs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ms", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"initialwebs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"initialwebs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "8", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"initialwebs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"W", "=", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{"ms", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"pqs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"ms", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"pqs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"ms", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"pqs", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]},
        {
         RowBox[{
          RowBox[{"ms", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"pqs", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"ms", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"pqs", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"ms", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", 
          RowBox[{
           RowBox[{"pqs", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}
       }], "\[NoBreak]", ")"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Wlist", "=", 
     RowBox[{"{", 
      RowBox[{"W", ",", 
       RowBox[{"-", "W"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<=", "2"}], ",", 
      RowBox[{"j", "++"}], ",", 
      RowBox[{
       RowBox[{"W2", "=", 
        RowBox[{"Labeling", "[", 
         RowBox[{"W", ",", "j"}], "]"}]}], ";", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Wlist", ",", "W2"}], "]"}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<=", 
       RowBox[{"Length", "[", "SL2Zmat", "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"W2", "=", 
        RowBox[{"SL2Z", "[", 
         RowBox[{"W", ",", 
          RowBox[{"SL2Zmat", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Wlist", ",", "W2"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Wlist", ",", 
         RowBox[{"-", "W2"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<=", "5"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"W3", "=", 
           RowBox[{"Labeling", "[", 
            RowBox[{"W2", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Wlist", ",", "W3"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Wlist", ",", 
            RowBox[{"-", "W3"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<=", "3"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"W3", "=", 
           RowBox[{"HW", "[", 
            RowBox[{"W", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Wlist", ",", "W3"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Wlist", ",", 
            RowBox[{"-", "W3"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"l", "=", "1"}], ",", 
            RowBox[{"l", "<=", "5"}], ",", 
            RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"W4", "=", 
              RowBox[{"Labeling", "[", 
               RowBox[{"W3", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"Wlist", ",", "W4"}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"Wlist", ",", 
               RowBox[{"-", "W4"}]}], "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<=", "3"}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"W2", "=", 
        RowBox[{"HW", "[", 
         RowBox[{"W", ",", "j"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Wlist", ",", "W2"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Wlist", ",", 
         RowBox[{"-", "W2"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<=", "5"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"W3", "=", 
           RowBox[{"Labeling", "[", 
            RowBox[{"W2", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Wlist", ",", "W3"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Wlist", ",", 
            RowBox[{"-", "W3"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<=", 
          RowBox[{"Length", "[", "SL2Zmat", "]"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"W3", "=", 
           RowBox[{"SL2Z", "[", 
            RowBox[{"W2", ",", 
             RowBox[{"SL2Zmat", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Wlist", ",", "W3"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Wlist", ",", 
            RowBox[{"-", "W3"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"l", "=", "1"}], ",", 
            RowBox[{"l", "<=", "5"}], ",", 
            RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"W4", "=", 
              RowBox[{"Labeling", "[", 
               RowBox[{"W3", ",", "l"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"Wlist", ",", "W4"}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"Wlist", ",", 
               RowBox[{"-", "W4"}]}], "]"}]}]}], "]"}]}]}], "]"}]}]}], "]"}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Wlist", "=", 
     RowBox[{"DeleteDuplicates", "[", "Wlist", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Wlist2", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "<=", 
       RowBox[{"Length", "[", "Wlist", "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"And", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Wlist", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", "100"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Wlist", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", "100"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Wlist", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "<", "100"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Wlist", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "<", "100"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Wlist", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "<", "100"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Wlist", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "<", "100"}]}], "]"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"Wlist2", ",", 
          RowBox[{"Wlist", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"bigWList", ",", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"Wlist2", ",", "100"}], "]"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.84364964858519*^9, 3.843649831766944*^9}, {
   3.843649952986889*^9, 3.8436501568969812`*^9}, {3.843650701207511*^9, 
   3.8436508025573187`*^9}, {3.84365083296909*^9, 3.843650866991149*^9}, {
   3.843650904297894*^9, 3.8436509062588873`*^9}, {3.8436509952970867`*^9, 
   3.843651012225445*^9}, {3.84365113331668*^9, 3.843651286183978*^9}, {
   3.843651365253305*^9, 3.843651374043859*^9}, {3.843815216761738*^9, 
   3.843815388656353*^9}, {3.843815422423633*^9, 3.8438154808517733`*^9}, 
   3.844157410636548*^9, {3.844158250904138*^9, 3.844158297897551*^9}, {
   3.8441583333017406`*^9, 3.844158393267103*^9}, {3.8441584264210367`*^9, 
   3.844158428130589*^9}, {3.844158585552092*^9, 3.8441585859457073`*^9}, {
   3.8441586394597273`*^9, 3.844158651189205*^9}, {3.844158702283739*^9, 
   3.844158702936451*^9}, {3.844158806000167*^9, 3.844158885141243*^9}, {
   3.844158917337961*^9, 3.8441589179257307`*^9}, {3.844159009392394*^9, 
   3.8441592907123013`*^9}, {3.8441595043597403`*^9, 3.844159528162904*^9}, {
   3.8441596034601927`*^9, 3.844159606740548*^9}, {3.84415964140362*^9, 
   3.8441596511263866`*^9}, {3.844159786566662*^9, 3.844159786714273*^9}, {
   3.844159829110999*^9, 3.844159832206189*^9}, {3.844159925970385*^9, 
   3.844160021900823*^9}, {3.844160114560894*^9, 3.844160115724523*^9}, {
   3.8441605470108137`*^9, 3.844160553671488*^9}, {3.844160765439295*^9, 
   3.844160863359297*^9}, {3.84416092178191*^9, 3.844160939728454*^9}, 
   3.8441612040041018`*^9, {3.8441881874424553`*^9, 3.8441882200527573`*^9}, {
   3.84418855093711*^9, 3.8441885818954363`*^9}, {3.8441886471259727`*^9, 
   3.8441886510331383`*^9}, {3.844250301818036*^9, 3.844250302313154*^9}, {
   3.844250470657536*^9, 3.844250495789423*^9}, {3.844250600399334*^9, 
   3.844250600873961*^9}, {3.84425097861287*^9, 3.844250978982279*^9}, {
   3.8442511741122913`*^9, 3.84425130846758*^9}, 3.844251369875057*^9, {
   3.844251407948625*^9, 3.844251412188238*^9}, {3.8444968681500483`*^9, 
   3.844496875147675*^9}, {3.844496925472039*^9, 3.8444969600567427`*^9}, 
   3.844497010556979*^9, {3.8445023216846523`*^9, 3.844502326822652*^9}, {
   3.844749203142796*^9, 3.844749222063525*^9}, 3.844751149382484*^9, {
   3.8447511807684317`*^9, 3.844751397347863*^9}, 3.844751966553678*^9, {
   3.845113871402472*^9, 3.845113871541692*^9}, {3.845113903233841*^9, 
   3.84511420016928*^9}, {3.84511423660038*^9, 3.8451142669937468`*^9}, {
   3.845114307537877*^9, 3.845114319689082*^9}, {3.8451144003439093`*^9, 
   3.845114467528911*^9}, 3.845114498935912*^9, {3.845114541351368*^9, 
   3.845114547647406*^9}, {3.845114584446022*^9, 3.845114863809113*^9}, 
   3.8451148991391582`*^9, {3.845115045271224*^9, 3.845115061531391*^9}, {
   3.845115150630999*^9, 3.8451151700889673`*^9}, {3.845115349385557*^9, 
   3.845115379828897*^9}, {3.8451154173446293`*^9, 3.84511542100881*^9}, {
   3.845359398491991*^9, 3.845359399984687*^9}, {3.845379818697052*^9, 
   3.845379901638002*^9}, {3.84538002725286*^9, 3.8453800289285593`*^9}, {
   3.845380090066147*^9, 3.845380126703959*^9}, {3.845380208002069*^9, 
   3.84538020949052*^9}, {3.845451963559366*^9, 3.845451964596074*^9}, {
   3.8455369416105328`*^9, 3.845536980652165*^9}, {3.84553702532506*^9, 
   3.845537052582913*^9}, {3.845537089574873*^9, 3.845537097884425*^9}, {
   3.845548076458897*^9, 3.845548084022773*^9}, {3.845639778417234*^9, 
   3.845639779488693*^9}, {3.8456398323596373`*^9, 3.8456398985467653`*^9}, {
   3.845640988708428*^9, 3.845640990386202*^9}, {3.8456412485136347`*^9, 
   3.845641266118637*^9}, {3.845641720372079*^9, 3.845641736555882*^9}, {
   3.845709083237706*^9, 3.8457091113050833`*^9}, {3.84570964440838*^9, 
   3.8457097021672153`*^9}, {3.846052066071864*^9, 3.846052067541628*^9}, {
   3.846052139158692*^9, 3.8460521630360203`*^9}, {3.846052217770892*^9, 
   3.846052500118155*^9}, {3.846052546633027*^9, 3.846052566710428*^9}, 
   3.846052729111578*^9, {3.846052771161499*^9, 3.846052771847213*^9}, {
   3.846210925855274*^9, 3.8462109350682*^9}, {3.846210967923637*^9, 
   3.8462110036900663`*^9}, {3.8462110387336807`*^9, 3.846211222782014*^9}, {
   3.846211310008675*^9, 3.846211311631678*^9}, {3.846211344670478*^9, 
   3.846211400345887*^9}, {3.84650114909516*^9, 3.846501151389772*^9}, {
   3.846586282665556*^9, 3.846586283698997*^9}, {3.846586549501832*^9, 
   3.846586550276726*^9}, {3.846748720442032*^9, 3.846748723061844*^9}, {
   3.846748756235861*^9, 3.846748779704472*^9}, {3.846754821041456*^9, 
   3.8467548336571093`*^9}, {3.846754893217431*^9, 3.846754898216895*^9}, {
   3.847179835447006*^9, 3.847179882521153*^9}, {3.847179924789218*^9, 
   3.8471799930574713`*^9}, {3.847182263283306*^9, 3.847182264660141*^9}, {
   3.8471901639172287`*^9, 3.8471903756750803`*^9}, {3.8477249534236727`*^9, 
   3.847724954020321*^9}, {3.847727747906094*^9, 3.847727761181723*^9}, {
   3.847796389691853*^9, 3.847796415046575*^9}, {3.847796515665988*^9, 
   3.847796516569278*^9}, {3.847796761536476*^9, 3.8477967629426403`*^9}, {
   3.847796797703961*^9, 3.8477968241056023`*^9}, {3.847796864124193*^9, 
   3.8477969281724577`*^9}, {3.847796973725635*^9, 3.847797041329813*^9}, {
   3.8477971170673227`*^9, 3.8477971390634527`*^9}, {3.847797172077908*^9, 
   3.8477971841137123`*^9}, {3.847797342373448*^9, 3.8477973510318193`*^9}, {
   3.8477975088962717`*^9, 3.8477975221326113`*^9}, {3.84779757511963*^9, 
   3.847797598349275*^9}, {3.8477976523132753`*^9, 3.847797778450783*^9}, {
   3.8477983570332413`*^9, 3.847798386411419*^9}, {3.8477985189175262`*^9, 
   3.8477985228909397`*^9}, {3.847798593701659*^9, 3.847798618409676*^9}, {
   3.8477993554813643`*^9, 3.847799358130279*^9}, {3.847799710056862*^9, 
   3.84779974084606*^9}, {3.847799808415806*^9, 3.847799816181674*^9}, {
   3.847800373303234*^9, 3.847800432882864*^9}, {3.847800473837981*^9, 
   3.8478004764825573`*^9}, {3.847800545855747*^9, 3.8478005482449102`*^9}, {
   3.847800626366816*^9, 3.8478006433951073`*^9}, {3.847800697075324*^9, 
   3.847800709272462*^9}, {3.8478010574782124`*^9, 3.8478010580814323`*^9}, {
   3.847802446961801*^9, 3.8478024480937767`*^9}, {3.848317811215687*^9, 
   3.848317817569153*^9}, {3.848327598858368*^9, 3.848327604573223*^9}, {
   3.848327950139719*^9, 3.848328296259652*^9}, {3.84838644362928*^9, 
   3.848386496542213*^9}, {3.849953819072728*^9, 3.849953826100251*^9}, {
   3.8499540633377237`*^9, 3.849954087491836*^9}, {3.849954176679592*^9, 
   3.8499541771535673`*^9}, {3.850026694153728*^9, 3.8500267090535803`*^9}, {
   3.850026745125896*^9, 3.850026747331773*^9}, {3.850026800724286*^9, 
   3.850026810072033*^9}, {3.850027049494523*^9, 3.85002724788579*^9}, {
   3.8500273159726257`*^9, 3.850027353804907*^9}, {3.850027386074629*^9, 
   3.8500274097702293`*^9}, {3.850027441855763*^9, 3.850027444549593*^9}, {
   3.850027513665304*^9, 3.85002752511318*^9}, {3.8500275571773443`*^9, 
   3.850027600685629*^9}, {3.8500276800637083`*^9, 3.850027685175968*^9}, {
   3.850027740687709*^9, 3.850027811827869*^9}, {3.850027854911182*^9, 
   3.850027931003008*^9}, {3.850027997880547*^9, 3.85002800031654*^9}, {
   3.85003116718779*^9, 3.850031215332507*^9}, {3.8500314865668097`*^9, 
   3.850031539192987*^9}, {3.850031590903034*^9, 3.850031683733389*^9}, {
   3.850031768014123*^9, 3.85003180346426*^9}, 3.85003213675697*^9, {
   3.850032229355276*^9, 3.850032238325986*^9}, {3.8500323051388073`*^9, 
   3.850032391708699*^9}, {3.850033031666638*^9, 3.850033053793645*^9}, {
   3.850033106931984*^9, 3.8500331076343117`*^9}, {3.851626107271737*^9, 
   3.851626304423348*^9}, {3.8516263826165524`*^9, 3.851626416557262*^9}, {
   3.8516283078642473`*^9, 3.851628312619677*^9}, {3.851669785363893*^9, 
   3.8516697903667307`*^9}, {3.851669830451449*^9, 3.8516698309320383`*^9}, {
   3.8516698755111837`*^9, 3.851670015245901*^9}, {3.8516700908005733`*^9, 
   3.851670105133986*^9}, {3.8516743583297377`*^9, 3.851674366328505*^9}, {
   3.851765324470525*^9, 3.851765459899692*^9}, {3.8517656588752537`*^9, 
   3.8517656594613047`*^9}, {3.851765763448308*^9, 3.851765764259377*^9}, {
   3.851765833811028*^9, 3.85176585748779*^9}, {3.8520036597289257`*^9, 
   3.852003660874268*^9}, {3.8520038543685017`*^9, 3.8520040021085176`*^9}, {
   3.852004033698916*^9, 3.852004052677168*^9}, {3.8520040853596907`*^9, 
   3.852004335569824*^9}, 3.852004392757251*^9, {3.85200444439295*^9, 
   3.8520044956012583`*^9}, {3.852023673118332*^9, 3.852023713920684*^9}, {
   3.8520237634489527`*^9, 3.852023865833357*^9}, {3.8520326466768513`*^9, 
   3.852032727377288*^9}, {3.852032757476231*^9, 3.852032914806753*^9}, {
   3.85203296569732*^9, 3.8520330158952827`*^9}, {3.8520330465089684`*^9, 
   3.852033116419997*^9}, {3.8520331801587677`*^9, 3.8520332110246773`*^9}, {
   3.852033246599449*^9, 3.852033264640465*^9}, {3.852033312128871*^9, 
   3.852033343013897*^9}, {3.852033379848864*^9, 3.852033643771408*^9}, {
   3.852033691320588*^9, 3.852033721350049*^9}, {3.852034368670373*^9, 
   3.852034549215128*^9}, {3.852034595635632*^9, 3.852034616236258*^9}, {
   3.852034651936554*^9, 3.85203469636642*^9}, {3.852034789378043*^9, 
   3.852034806027994*^9}, {3.852034845850732*^9, 3.8520349012156687`*^9}, {
   3.8520349811522713`*^9, 3.852034995969921*^9}, {3.8520440221632957`*^9, 
   3.852044028459011*^9}, {3.852044079356946*^9, 3.8520441382889633`*^9}, {
   3.8520447033354588`*^9, 3.852044835013234*^9}, {3.852125556525855*^9, 
   3.852125571102949*^9}, {3.852126730235936*^9, 3.852126730535953*^9}, {
   3.852129107471011*^9, 3.852129240712803*^9}, {3.8522209043569403`*^9, 
   3.852220916439456*^9}, {3.852223809458166*^9, 3.852223820506919*^9}, {
   3.852223915855115*^9, 3.8522239162121773`*^9}, {3.852747630067931*^9, 
   3.85274769984149*^9}, {3.853423784056567*^9, 3.8534238105755463`*^9}, {
   3.8534787530309343`*^9, 3.8534787549960003`*^9}, {3.85347887770434*^9, 
   3.8534789011254396`*^9}, {3.853527619005207*^9, 3.853527620033106*^9}, {
   3.8535277361125813`*^9, 3.85352776510741*^9}, {3.853527812967778*^9, 
   3.853527896699276*^9}, {3.853527939064951*^9, 3.8535279598303833`*^9}, {
   3.853527995398199*^9, 3.853528082172418*^9}, {3.853528177848098*^9, 
   3.8535281848156967`*^9}, {3.853529888210531*^9, 3.853529888728403*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c5a1fe41-085c-4cb1-9361-9b2a7139de70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "write", " ", "the", " ", "web", " ", "matrices", " ", "list", " ", "to", 
    " ", "a", " ", "file"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\</Users/elliheyes/Documents/PhD/Data/Brane_Webs/3leg_data_Y.csv\>\"",
       ",", "bigWList"}], "]"}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8478017754949636`*^9, 3.847801777506258*^9}, {
   3.847802361561841*^9, 3.847802364547532*^9}, {3.8483283734362392`*^9, 
   3.848328380165348*^9}, {3.848386356168315*^9, 3.8483863634037333`*^9}, {
   3.848386503138638*^9, 3.848386503286148*^9}, {3.850033299648878*^9, 
   3.850033302008263*^9}, {3.851626481743836*^9, 3.851626484518787*^9}, {
   3.8516700206918383`*^9, 3.8516700349634113`*^9}, 3.851670136924638*^9, {
   3.8517652968136263`*^9, 3.851765299054474*^9}, 3.8521881109731894`*^9, {
   3.8522269852285423`*^9, 3.85222698644331*^9}, {3.8522270316024*^9, 
   3.852227031746334*^9}, {3.852264025060302*^9, 3.8522640387572613`*^9}, {
   3.852748045666909*^9, 3.852748045886352*^9}, {3.852780061197164*^9, 
   3.8527800613251133`*^9}, {3.853424580400629*^9, 3.853424581610268*^9}, {
   3.853425279325357*^9, 3.853425279474856*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2de14631-2c43-4648-9bb0-95f64e1164fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pyList", "[", "myList_", "]"}], ":=", 
  RowBox[{"CopyToClipboard", "@", 
   RowBox[{"StringReplace", "[", 
    RowBox[{
     RowBox[{"ToString", "@", 
      RowBox[{"InputForm", "@", "myList"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<}, {\>\"", "->", "\"\<],\\n [\>\""}], ",", 
       RowBox[{"\"\<{\>\"", "->", "\"\<[\>\""}], ",", 
       RowBox[{"\"\<,\>\"", "->", "\"\<,\>\""}], ",", 
       RowBox[{"\"\<}\>\"", "->", "\"\<]\>\""}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.853479222587967*^9, 3.853479222606719*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"3a34e540-da28-4771-a1d4-0dc7601b4217"],

Cell[BoxData[
 RowBox[{"pyList", "[", "bigWList", "]"}]], "Input",
 CellChangeTimes->{{3.853479227871683*^9, 3.853479231810048*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4ac66f11-6695-4be9-8dcc-685ea274c0ae"]
},
WindowSize->{1792, 974},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], Appearance -> None, 
             BaselinePosition -> Baseline, ButtonFunction :> 
             If[OptionValue[{
                 ImageSize -> {Automatic, 19}, 
                  FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                  Baseline, Alignment -> {Center, Center}, Method -> 
                  "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                  CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                  "TextHoverColor" -> 
                  CodeInspector`LinterUI`Private`colorData["ButtonTextHover"],
                   "TextInactiveColor" -> 
                  CodeInspector`LinterUI`Private`colorData[
                   "ButtonTextInactive"], "BackColor" -> 
                  CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                  "BackHoverColor" -> 
                  CodeInspector`LinterUI`Private`colorData["ButtonBackHover"],
                   "BackMouseDownColor" -> 
                  CodeInspector`LinterUI`Private`colorData[
                   "ButtonBackMouseDown"], "BackInactiveColor" -> 
                  CodeInspector`LinterUI`Private`colorData[
                   "ButtonBackInactive"], "EdgeColor" -> 
                  CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                  "EdgeHoverColor" -> 
                  CodeInspector`LinterUI`Private`colorData["ButtonEdgeHover"],
                   "EdgeInactiveColor" -> 
                  CodeInspector`LinterUI`Private`colorData[
                   "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
               False, 
               CodeInspector`LinterUI`Private`attachAnalysisAction[
                EvaluationNotebook[]]], ContentPadding -> False, Evaluator -> 
             Automatic, Method -> "Queued"], DynamicModuleValues :> {}], 
          False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], Appearance -> False, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             True]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[LinterUIDockedCell`Private`dockedCellMenuItem, 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], Null, LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringJoin[
                  StringDrop[LinterUIDockedCell`Private`previewString, -1], 
                  "\[Ellipsis]"], 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`cell, 
            Blank[CellObject]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`cell, 
             CodeInspector`LinterUI`Private`name]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Condition[
            Pattern[CodeInspector`LinterUI`Private`cellOrNB, 
             Blank[]], 
            MatchQ[CodeInspector`LinterUI`Private`cellOrNB, 
             Alternatives[
              Blank[CellObject], 
              Blank[NotebookObject]]]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
           StringJoin[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`cellOrNB], "*"]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
           StringJoin[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`notebook], "*", 
            CodeInspector`LinterUI`Private`name]]], 
        CodeInspector`LinterUI`Private`varValue[
          Condition[
           Pattern[CodeInspector`LinterUI`Private`cellOrNB, 
            Blank[]], 
           MatchQ[CodeInspector`LinterUI`Private`cellOrNB, 
            Alternatives[
             Blank[CellObject], 
             Blank[NotebookObject]]]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cellOrNB, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell, 
           CodeInspector`LinterUI`Private`lint, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Condition[
           Pattern[CodeInspector`LinterUI`Private`cellOrNB, 
            Blank[]], 
           MatchQ[CodeInspector`LinterUI`Private`cellOrNB, 
            Alternatives[
             Blank[CellObject], 
             Blank[NotebookObject]]]], All] := Map[Symbol, 
          Names[
           StringJoin[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`cellOrNB], "*"]]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          Names[
           StringJoin[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`notebook], "*", 
            CodeInspector`LinterUI`Private`name]]], 
        CodeInspector`LinterUI`Private`varSet[{
           Condition[
            Pattern[CodeInspector`LinterUI`Private`cellOrNB, 
             Blank[]], 
            MatchQ[CodeInspector`LinterUI`Private`cellOrNB, 
             Alternatives[
              Blank[CellObject], 
              Blank[NotebookObject]]]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`cellOrNB, 
             CodeInspector`LinterUI`Private`name]], 
           CodeInspector`LinterUI`Private`value]], Null, 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`cell, 
            Blank[CellObject]], 
           Pattern[CodeInspector`LinterUI`Private`lint, 
            Blank[CodeInspector`InspectionObject]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`cell, 
             CodeInspector`LinterUI`Private`lint, 
             CodeInspector`LinterUI`Private`name]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := 
        StringJoin["CodeInspector`LinterUI`Private`Vars`", "$$", 
          
          With[{CodeInspector`LinterUI`Private`nbID = 
            Last[CodeInspector`LinterUI`Private`notebook]}, 
           If[
            StringQ[CodeInspector`LinterUI`Private`nbID], 
            StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
            ToString[CodeInspector`LinterUI`Private`nbID]]], "$$"], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := StringJoin[
          CodeInspector`LinterUI`Private`varNameString[
           Replace[
            ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
            EvaluationNotebook[]]], 
          
          With[{CodeInspector`LinterUI`Private`cellID = 
            First[CodeInspector`LinterUI`Private`cell]}, 
           If[
            StringQ[CodeInspector`LinterUI`Private`cellID], 
            StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
            ToString[CodeInspector`LinterUI`Private`cellID]]], "$$"], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := StringJoin[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook], 
          CodeInspector`LinterUI`Private`name], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := StringJoin[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell], 
          CodeInspector`LinterUI`Private`name], Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := StringJoin[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell], 
          Apply[Sequence, 
           Riffle[
            Map[StringDelete[
              ToString[#], 
              Alternatives["[", "]", "{", "}", ",", " "]]& , 
             CodeInspector`LinterUI`Private`extractFirstList[
              Last[CodeInspector`LinterUI`Private`lint][CodeParser`Source]]], 
            "$"]], "$$", CodeInspector`LinterUI`Private`name], 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1.05 Inherited,
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0b47cbe3-4725-4cc6-b00a-cdae72c40b6d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 441, 6, 36, "Text",ExpressionUUID->"c176b238-4782-4b8a-9d68-ae8f978a59a1"],
Cell[1002, 28, 815, 21, 71, "Input",ExpressionUUID->"04575c71-10d4-4799-bd36-0554d99955a1"],
Cell[1820, 51, 356, 6, 36, "Text",ExpressionUUID->"9f731d3c-5b2b-4543-9947-b20d11442dde"],
Cell[CellGroupData[{
Cell[2201, 61, 3893, 55, 31, "Input",ExpressionUUID->"75ea87da-a852-4857-a175-a081107209b5"],
Cell[6097, 118, 491, 11, 29, "Message",ExpressionUUID->"9bcc242f-0870-4f34-8df7-e608a45692ac"]
}, Open  ]],
Cell[6603, 132, 169, 3, 36, "Text",ExpressionUUID->"83947f1c-ccf1-4d9f-800e-ef87bcd6f0bb"],
Cell[CellGroupData[{
Cell[6797, 139, 3905, 92, 252, "Input",ExpressionUUID->"d8895932-1a48-4590-9cf6-94e38741ea53"],
Cell[10705, 233, 3692, 137, 59, "Output",ExpressionUUID->"37a75a46-829a-48c2-9e0a-44bbe153224f"]
}, Open  ]],
Cell[14412, 373, 336, 5, 36, "Text",ExpressionUUID->"eb735d04-b821-4638-af71-6a1013099bb8"],
Cell[14751, 380, 6653, 178, 142, "Input",ExpressionUUID->"f796ca66-33cc-43ce-aca0-3507b471ec13"],
Cell[21407, 560, 439, 6, 36, "Text",ExpressionUUID->"f3811d29-925b-4737-bbf2-db0899a44250"],
Cell[21849, 568, 3515, 100, 54, "Input",ExpressionUUID->"180d433e-9b04-431e-b6b3-2891f8ef2f79"],
Cell[25367, 670, 593, 8, 36, "Text",ExpressionUUID->"dfbc7ddb-6b3d-479a-a6f9-87349ce5bc5f"],
Cell[25963, 680, 38201, 994, 538, "Input",ExpressionUUID->"bb8ea5e5-2ba7-4826-83df-f8a7bcb2d8f3"],
Cell[64167, 1676, 271, 4, 36, "Text",ExpressionUUID->"849dfba4-5b26-42f7-8e12-ca75a64c445d"],
Cell[64441, 1682, 22341, 457, 1119, "Input",ExpressionUUID->"c5a1fe41-085c-4cb1-9361-9b2a7139de70"],
Cell[86785, 2141, 1352, 24, 76, "Input",ExpressionUUID->"2de14631-2c43-4648-9bb0-95f64e1164fa"],
Cell[88140, 2167, 677, 16, 31, "Input",ExpressionUUID->"3a34e540-da28-4771-a1d4-0dc7601b4217"],
Cell[88820, 2185, 211, 3, 31, "Input",ExpressionUUID->"4ac66f11-6695-4be9-8dcc-685ea274c0ae"]
}
]
*)

